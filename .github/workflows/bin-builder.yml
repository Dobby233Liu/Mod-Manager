name: ci-bin-builder
on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v1
      - run: |
          export ELECTRON_CACHE=$HOME/.cache/electron
          export ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder      
        name: Export variables
      - run: |
          sudo apt-get update
          sudo apt-get install -y gcc-multilib g++-multilib
        name: Install multilib GCC and G++
      - run: |
          yarn && yarn test && yarn release -l --publish never
        name: Run build
      - uses: actions/upload-artifact@v2
        with:
          name: DDMM-linux
          path: dist/*.AppImage
      - name: Upload files to release
        uses: skx/github-action-publish-binaries@master
        if: github.event.release # Runs ONLY when it's a published release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # We use the outputs here to tell it where exactly the file is.
          args: dist/*.AppImage
  build-mac:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v1
      - run: |
          export ELECTRON_CACHE=$HOME/.cache/electron
          export ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder      
        name: Export variables
      - run: |
          yarn && yarn test && yarn release -m --publish never
        name: Run build
      - uses: actions/upload-artifact@v2
        with:
          name: DDMM-mac
          path: dist/*.dmg
      - name: Upload files to release
        uses: skx/github-action-publish-binaries@master
        if: github.event.release # Runs ONLY when it's a published release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # We use the outputs here to tell it where exactly the file is.
          args: dist/*.dmg
  build-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v1
      - run: |
          yarn && yarn test && yarn release -w --publish never
      - uses: actions/upload-artifact@v2
        with:
          name: DDMM-win
          # not sure
          path: dist/ddmm-*.exe
      - name: Upload files to release
        uses: skx/github-action-publish-binaries@master
        if: github.event.release # Runs ONLY when it's a published release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # We use the outputs here to tell it where exactly the file is.
          args: dist/ddmm-*.exe
